
server {

    listen              443 ssl;
    listen              8099;
    server_name         analytics.trustnetworks.com;
    ssl_certificate     /cert/cert.web;
    ssl_certificate_key /cert/key.web;
    ssl_client_certificate /cert/cert.ca;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    ssl_verify_client   on;

    #access_log  /var/log/nginx/log/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    location /sparql/ {
        proxy_pass http://sparql:8081/;
    }

    location /kibana/ {
        proxy_pass http://kibana:5601/;
    }

    location /elasticsearch/ {
        proxy_pass http://elasticsearch:9200/;
    }

    location /gaffer/ {
	if ($request_method = 'OPTIONS') {
	    add_header 'Access-Control-Allow-Origin' '*';
	    add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, PUT, OPTIONS';
	    #
	    # Custom headers and headers various browsers *should* be OK with but aren't
	    #
	    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
	    #
	    # Tell client that this pre-flight info is valid for 20 days
	    #
	    add_header 'Access-Control-Max-Age' 1728000;
	    add_header 'Content-Type' 'text/plain charset=UTF-8';
	    add_header 'Content-Length' 0;
	    return 204;
	}
	if ($request_method = 'POST') {
	    add_header 'Access-Control-Allow-Origin' '*';
	    add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, PUT, OPTIONS';
	    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
	}
	if ($request_method = 'GET') {
	    add_header 'Access-Control-Allow-Origin' '*';
	    add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, PUT, OPTIONS';
	    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
	}
        proxy_pass http://gaffer:8080/;
    }

    location /host-classifier/ {
        proxy_pass http://url-classifier:8080/;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

}

