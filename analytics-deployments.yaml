apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: analytics
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: analytics
    spec:
      containers:
      - name: analytics
        image: gcr.io/trust-networks/analytics:0.61
        livenessProbe:
          exec:
            command:
            - wye-get-health
          initialDelaySeconds: 15
          timeoutSeconds: 10
        resources:
          requests:
            memory: "512M"
            cpu: "1.0"
          limits:
            memory: "1024M"
            cpu: "1.0"
        volumeMounts:
        - mountPath: /key
          name: keys
          readOnly: True
        - mountPath: /curve-public
          name: analytics-curve-client-keys
          readOnly: True
        - mountPath: /curve-private
          name: analytics-curve-publisher-private
          readOnly: True
        env:
        - name: KEY
          value: /key/private.json
        - name: CURVE_PUBLIC
          value: /curve-public
        - name: CURVE_PRIVATE
          value: /curve-private
        - name: BIGQUERY_PROJECT
          value: trust-networks
        - name: BIGQUERY_DATASET
          value: cyberprobe
        - name: RAW_TABLE
          value: cyberprobe
        - name: ACTIVITY_TABLE
          value: activity
        - name: TRUST_TABLE
          value: fingerprint
        - name: URI_TABLE
          value: uri_classification
        - name: CASSANDRA_KEYSPACE
          value: rdf
        - name: CASSANDRA_CONTACTS
          value: '["cassandra"]'
        - name: ELASTICSEARCH_INDEX
          value: cyberprobe
        - name: ELASTICSEARCH_OBJECT
          value: observation
        - name: ELASTICSEARCH_URL
          value: http://elasticsearch:9200
        - name: GAFFER_URL
          value: http://gaffer:8080/example-rest/v1
        - name: HDFS_URL
          value: http://hadoop-m:50070/
        ports:
        - containerPort: 8080
          name: management
        - containerPort: 5555
          name: input
        - containerPort: 5556
          name: publisher
      volumes:
      - name: keys
        secret:
          secretName: keys
      - name: analytics-curve-client-keys
        secret:
          secretName: analytics-curve-client-keys
      - name: analytics-curve-publisher-private
        secret:
          secretName: analytics-curve-publisher-private
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cassandra
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: cassandra
    spec:
      containers:
      - name: cassandra
        image: cassandra:3.9
        resources:
          requests:
            memory: "4096M"
            cpu: "1.0"
          limits:
            memory: "8192M"
            cpu: "2.0"
        ports:
        - containerPort: 7000
          name: intra-node
        - containerPort: 7001
          name: tls-intra-node
        - containerPort: 7199
          name: jmx
        - containerPort: 9042
          name: cql
        volumeMounts:
          - mountPath: /var/lib/cassandra
            name: cassandra-data
      volumes:
      - name: cassandra-data
        gcePersistentDisk:
          pdName: cassandra-0000
          fsType: ext4
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: elasticsearch
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
      - name: elasticsearch
        image: elasticsearch:2.4.1
        resources:
          requests:
            memory: "2048M"
            cpu: "1.0"
          limits:
            memory: "4096M"
            cpu: "1.0"
        ports:
        - containerPort: 9200
          name: http
        - containerPort: 9300
          name: http2
        volumeMounts:
          - mountPath: /usr/share/elasticsearch/data
            name: elasticsearch-data
      volumes:
      - name: elasticsearch-data
        gcePersistentDisk:
          pdName: elasticsearch-0000
          fsType: ext4
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: gaffer
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: gaffer
    spec:
      containers:
      - name: hadoop
        image: cybermaggedon/hadoop:2.7.3
        resources:
          requests:
            memory: "512M"
            cpu: "0.5"
          limits:
            memory: "1024M"
            cpu: "1.0"
        volumeMounts:
          - mountPath: /data
            name: hadoop
      - name: zookeeper
        image: cybermaggedon/zookeeper:3.4.9
        resources:
          requests:
            memory: "512M"
            cpu: "0.1"
          limits:
            memory: "1024M"
            cpu: "0.1"
        volumeMounts:
          - mountPath: /data
            name: zookeeper
      - name: accumulo
        image: cybermaggedon/accumulo-gaffer:0.4.4
        resources:
          requests:
            memory: "2048M"
            cpu: "1.0"
          limits:
            memory: "2048M"
            cpu: "1.0"
        volumeMounts:
          - mountPath: /accumulo
            name: accumulo
      - name: gaffer
        image: cybermaggedon/wildfly-gaffer:0.4.4
        resources:
          requests:
            memory: "700M"
            cpu: "0.1"
          limits:
            memory: "700M"
            cpu: "0.1"
        ports:
        - containerPort: 8080
      volumes:
      - name: hadoop
        gcePersistentDisk:
          pdName: gaffer-hadoop-0000
          fsType: ext4
      - name: zookeeper
        gcePersistentDisk:
          pdName: gaffer-zookeeper-0000
          fsType: ext4
      - name: accumulo
        gcePersistentDisk:
          pdName: gaffer-accumulo-0000
          fsType: ext4
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cybermon
spec:
  replicas: 8
  template:
    metadata:
      labels:
        app: cybermon
    spec:
      containers:
      - name: cybermon
        image: cybermaggedon/cybermon:0.77
        resources:
          requests:
            memory: "128M"
            cpu: "0.2"
          limits:
            memory: "1024M"
            cpu: "1.0"
        env:
        - name: ZMQ_CONNECT
          value: tcp://events:5555
        ports:
        - containerPort: 9000
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kibana
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - name: kibana
        image: kibana:4.6.2
        resources:
          requests:
            memory: "1024M"
            cpu: "0.2"
          limits:
            memory: "2048M"
            cpu: "0.5"
        env:
        - name: ELASTICSEARCH_URL
          value: http://elasticsearch:9200
        ports:
        - containerPort: 5601
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: sparql
spec:
  replicas: 4
  template:
    metadata:
      labels:
        app: sparql
    spec:
      containers:
      - name: sparql
        image: cybermaggedon/sparql-cassandra:0.03
        command:
        - "sparql"
        - "8081"
        - "cassandra"
        - "cassandra"
        resources:
          requests:
            memory: "64M"
            cpu: "0.2"
          limits:
            memory: "256M"
            cpu: "0.5"
        ports:
        - containerPort: 8081
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: web
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
      - name: web
        image: gcr.io/trust-networks/web:0.20
        resources:
          requests:
            memory: "64M"
            cpu: "0.1"
          limits:
            memory: "256M"
            cpu: "0.5"
        ports:
        - containerPort: 443
        volumeMounts:
        - mountPath: /cert
          name: web-cert
          readOnly: True
      volumes:
      - name: web-cert
        secret:
          secretName: web-cert
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ca
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: ca
    spec:
      containers:
      - name: ca
        image: gcr.io/trust-networks/ca:0.11
        resources:
          requests:
            memory: "64M"
            cpu: "0.1"
          limits:
            memory: "64M"
            cpu: "0.5"
        volumeMounts:
        - mountPath: /cert
          name: ca-cert
          readOnly: True
        - mountPath: /ca
          name: ca-data
        env:
        - name: CA
          value: /ca
        - name: CA_CERT
          value: /cert
      volumes:
      - name: ca-cert
        secret:
          secretName: ca-cert
      - name: ca-data
        gcePersistentDisk:
          pdName: ca-0000
          fsType: ext4
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: url-classifier
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: url-classifier
    spec:
      containers:
      - name: ca
        image: gcr.io/trust-networks/url-classifier:0.01
        resources:
          requests:
            memory: "512M"
            cpu: "0.1"
          limits:
            memory: "512M"
            cpu: "0.5"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: vpn-server
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: vpn-server
    spec:
      containers:
      - name: vpn-server
        image: gcr.io/trust-networks/vpn-server:0.27
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
        resources:
          requests:
            memory: "256M"
            cpu: "0.2"
          limits:
            memory: "256M"
            cpu: "0.5"
        volumeMounts:
        - mountPath: /key
          name: vpn-server-key
          readOnly: True
      volumes:
      - name: vpn-server-key
        secret:
          secretName: vpn-server-key
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: vpn-ca
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: vpn-ca
    spec:
      containers:
      - name: vpn-ca
        image: gcr.io/trust-networks/vpn-ca:0.21
        resources:
          requests:
            memory: "64M"
            cpu: "0.2"
          limits:
            memory: "64M"
            cpu: "0.5"
        volumeMounts:
        - mountPath: /key
          name: vpn-ca-key
          readOnly: True
        - mountPath: /ca
          name: vpn-ca-data
        env:
        - name: CA_CERT
          value: /key
        - name: CA
          value: /ca
      volumes:
      - name: vpn-ca-key
        secret:
          secretName: vpn-ca-key
      - name: vpn-ca-data
        gcePersistentDisk:
          pdName: vpn-ca-data-0000
          fsType: ext4
