apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: analytics
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: analytics
    spec:
      containers:
      - name: analytics
        image: gcr.io/trust-networks/analytics:mvp2r
        livenessProbe:
          exec:
            command:
            - wye-get-health
          initialDelaySeconds: 15
          timeoutSeconds: 10
        resources:
          requests:
            memory: "64M"
            cpu: "0.5"
          limits:
            memory: "512M"
            cpu: "1.0"
        volumeMounts:
        - mountPath: /wye/key
          name: keys
          readOnly: True
        env:
        - name: KEY
          value: /wye/key/private.json
        - name: BIGQUERY_PROJECT
          value: trust-networks
        - name: BIGQUERY_DATASET
          value: cyberprobe
        - name: RAW_TABLE
          value: cyberprobe
        - name: ACTIVITY_TABLE
          value: activity
        - name: TRUST_TABLE
          value: fingerprint
        - name: CASSANDRA_KEYSPACE
          value: rdf
        - name: CASSANDRA_CONTACTS
          value: '["cassandra"]'
        - name: ZMQ_BINDING
          value: tcp://10.142.0.2:5555
        - name: ELASTICSEARCH_INDEX
          value: cyberprobe
        - name: ELASTICSEARCH_OBJECT
          value: observation
        - name: ELASTICSEARCH_URL
          value: http://elasticsearch:9200
        - name: GAFFER_URL
          value: http://gaffer:8080/example-rest/v1
        ports:
        - containerPort: 8080
          name: management
        - containerPort: 5555
          name: input
      volumes:
      - name: keys
        secret:
          secretName: keys
----
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cassandra
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: cassandra
    spec:
      containers:
      - name: cassandra
        image: cassandra:3.7
        resources:
          requests:
            memory: "4096M"
            cpu: "1.0"
          limits:
            memory: "8192M"
            cpu: "2.0"
        ports:
        - containerPort: 7000
          name: intra-node
        - containerPort: 7001
          name: tls-intra-node
        - containerPort: 7199
          name: jmx
        - containerPort: 9042
          name: cql
        volumeMounts:
          - mountPath: /var/lib/cassandra
            name: cassandra-data
      volumes:
      - name: cassandra-data
        gcePersistentDisk:
          pdName: cassandra-0000
          fsType: ext4
----
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: elasticsearch
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
      - name: elasticsearch
        image: elasticsearch:2.3.5
        resources:
          requests:
            memory: "2048M"
            cpu: "1.0"
          limits:
            memory: "4096M"
            cpu: "1.0"
        ports:
        - containerPort: 9200
          name: http
        - containerPort: 9300
          name: http2
        volumeMounts:
          - mountPath: /usr/share/elasticsearch/data
            name: elasticsearch-data
      volumes:
      - name: elasticsearch-data
        gcePersistentDisk:
          pdName: elasticsearch-0000
          fsType: ext4
----
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: gaffer
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: gaffer
    spec:
      containers:
      - name: gaffer
        image: cybermaggedon/gaffer:0.3.9
        resources:
          requests:
            memory: "2048M"
            cpu: "1.0"
          limits:
            memory: "6144M"
            cpu: "1.0"
        ports:
        - containerPort: 8080
        volumeMounts:
          - mountPath: /data
            name: gaffer-data
      volumes:
      - name: gaffer-data
        gcePersistentDisk:
          pdName: gaffer-0000
          fsType: ext4
----
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cybermon
spec:
  replicas: 8
  template:
    metadata:
      labels:
        app: cybermon
    spec:
      containers:
      - name: cybermon
        image: cybermaggedon/cybermon:0.77
        resources:
          requests:
            memory: "256M"
            cpu: "0.4"
          limits:
            memory: "512M"
            cpu: "0.8"
        env:
        - name: ZMQ_CONNECT
          value: tcp://analytics:5555
        ports:
        - containerPort: 9000
----
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kibana
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - name: kibana
        image: kibana:4.5.4
        resources:
          requests:
            memory: "1024M"
            cpu: "0.2"
          limits:
            memory: "2048M"
            cpu: "0.5"
        env:
        - name: ELASTICSEARCH_URL
          value: http://elasticsearch:9200
        ports:
        - containerPort: 5601
----
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: sparql
spec:
  replicas: 8
  template:
    metadata:
      labels:
        app: sparql
    spec:
      containers:
      - name: sparql
        image: cybermaggedon/sparql-cassandra:0.01
        command:
        - "sparql"
        - "8081"
        - "cassandra"
        - "cassandra"
        resources:
          requests:
            memory: "64M"
            cpu: "0.1"
          limits:
            memory: "256M"
            cpu: "0.2"
        ports:
        - containerPort: 8081
----
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: web
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
      - name: web
        image: gcr.io/trust-networks/web:0.18
        resources:
          requests:
            memory: "64M"
            cpu: "0.1"
          limits:
            memory: "256M"
            cpu: "0.5"
        ports:
        - containerPort: 443
        volumeMounts:
        - mountPath: /cert
          name: web-cert
          readOnly: True
      volumes:
      - name: web-cert
        secret:
          secretName: web-cert
----
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ca
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: ca
    spec:
      containers:
      - name: ca
        image: gcr.io/trust-networks/ca:0.10
        resources:
          requests:
            memory: "64M"
            cpu: "0.1"
          limits:
            memory: "64M"
            cpu: "0.5"
        volumeMounts:
        - mountPath: /cert
          name: ca-cert
          readOnly: True
        - mountPath: /ca
          name: ca-data
        env:
        - name: CA
          value: /ca
        - name: CA_CERT
          value: /cert
      volumes:
      - name: ca-cert
        secret:
          secretName: ca-cert
      - name: ca-data
        gcePersistentDisk:
          pdName: ca-0000
          fsType: ext4
